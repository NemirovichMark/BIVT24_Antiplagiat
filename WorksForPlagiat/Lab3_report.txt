31
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Аникин.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Ионина.cs
5
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < 4; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < 6; i++)            if (array[i] < 0)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < 10; i++)            if (array[i] > P && array[i] < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < 8; i++)            if (array[i] < 0)                index = i;                value = array[i];    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < 10; i++)                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);            else                y[i] = double.NaN;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Беломестнова.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Болошенко.cs
5
    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < 6; i++)            if (array[i] < 0)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < 8; i++)            if (array[i] < 0)                value = array[i];                index = i;    public double[] Task_2_6(double[] array, double P)        int index = -1;        double min = 10000000;        for (int i = 0; i < array.Length; i++)            if (Math.Abs(array[i] - sr) < min)                min = Math.Abs(array[i] - sr);                index = i;        double[] b = new double[array.Length + 1];        for (int i = 0; i <= index; i++)            b[i] = array[i];        b[index + 1] = P;        for (int i = index + 1; i < array.Length; i++)            b[i + 1] = array[i];        array = b;    public double[] Task_2_10(double[] array)        double min = 10000000;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0 && array[i] < min)                min = array[i];                index = i;        if (index != -1)            double[] b = new double[array.Length - 1];            for (int i = 0, j = 0; i < array.Length; i++)                if (i != index)                    b[j++] = array[i];            array = b;    public double[] Task_3_5(double[] array)        double k = 0;        int a = 0;        for (int i = 0; i < array.Length; i++)                k = array[i];                a = i - 2;                while (a >= 0 && array[a] > k)                    array[a + 2] = array[a];                    a -= 2;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Виноградова.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Чистякова.cs
9
    public double[] Task_1_7(double[] array)        double s = 0;        int count = 0;        double avg = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];            count++;        if (count > 0)            avg = s / count;        for (int i = 0; i < array.Length; i++)            if (array[i] > avg)                array[i] = 0;    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                count++;    public int Task_1_9(double[] array)        int count = 0;        double s = 0;        int k = 0;        double avg = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];            k++;        if (k > 0)            avg = s / k;        for (int i = 0; i < array.Length; i++)            if (array[i] > avg)                count++;    public double Task_1_14(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] >= 0)                sum += Math.Pow(array[i], 2);            else                break;    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < x.Length; i++)            if (x[i] != 0)                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);            else                y[i] = Double.NaN;    public double[] Task_3_2(double[] array)        double max = -100000;        int k = 1;        for (int i = 0; i < array.Length; i++)            if (array[i] > max)                max = array[i];        for (int i = 0; i < array.Length; i++)            if (array[i] == max)                array[i] += k;                k++;    public double[] Task_3_5(double[] array)        double[] chet = new double[(array.Length + 1) / 2];        int chetindex = 0;        for (int i = 0; i < array.Length; i += 2)            chet[chetindex] = array[i];            chetindex++;        for (int i = 0; i < chet.Length - 1; i++)            for (int j = 0; j < chet.Length - 1 - i; j++)                if (chet[j] > chet[j + 1])                    double n = chet[j];                    chet[j] = chet[j + 1];                    chet[j + 1] = n;        chetindex = 0;        for (int i = 0; i < array.Length; i += 2)            array[i] = chet[chetindex];            chetindex++;    public (double[], double[], double, double) Task_3_11(double a, double b, int n)        double[] X = null, Y = null;        double globalMax = 0, globalMin = 0;        X = new double[n];        Y = new double[n];        double max = -1000000;        double min = 1000000;        for (int i = 0; i < X.Length; i++)            X[i] = a + i * h;            Y[i] = Math.Cos(X[i]) + X[i] * Math.Sin(X[i]);        for (int i = 0; i < Y.Length; i++)                max = Y[i];                min = Y[i];        globalMax = max;        globalMin = min;    public double[] Task_3_14(double[] array)        double[] normalizedArray = null;        normalizedArray = new double[array.Length];        double max = -1000000;        double min = 1000000;        for (int i = 0; i < array.Length; i++)                max = array[i];            if (array[i] < min)                min = array[i];        for (int i = 0; i < array.Length; i++)            normalizedArray[i] = Math.Round(2 * (array[i] - min) / (max - min) - 1, 2);
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Вовк.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Горохова.cs
5
    public double Task_1_5(double[] vector1, double[] vector2)        double product = 0;        for (int i = 0; i < 4; i++)            product += vector1[i] * vector2[i];        product = Math.Round(product, 2);    public double Task_1_6(double[] vector)        double length = 0;        for (int i = 0; i < 5; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);        length = Math.Round(length, 2);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < 6; i++)            if (array[i] < 0)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;            if (array[i] < 0)                index = i;                value = array[i];    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < 10; i++)            else                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Воднев.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Мамонтов.cs
5
    public double[] Task_1_11(double[] array)        double[] output = null;        int size = 0;        foreach (double i in array)            if (i > 0) size++;        output = new double[size];        int j = 0;        foreach (double i in array)                output[j] = i;                j++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;                value = array[i];                index = i;    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];                y[i] = double.NaN;                continue;            y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);    public double Task_2_2(double[] array)        double sum = 0;        double max = array[0];            if (i > max) max = i;            if (i == max) break;            sum += i;    public double[] Task_2_4(double[] array)        double average = 0, max = array[0];        int j = 0;            average += array[i];                max = array[i];                j = i;        j++;        average /= array.Length;        average = Math.Round(average, 2);            array[j] = average;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Глазунов.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Степанов.cs
6
    public double[] Task_1_4(double[] array)        double sum = 0;            sum += array[i];        sum = sum / 5;            array[i] -= sum;    public double Task_1_6(double[] vector)        double length = 0;        for (int i = 0; i < vector.Length; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > P && array[i] < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;    public double Task_1_14(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0) break;            sum += array[i] * array[i];
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Ионина.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Рыжкевич.cs
6
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < 4; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double Task_1_6(double[] vector)        double length = 0;        for (int i = 0; i < 5; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < 6; i++)            if (array[i] < 0)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < 10; i++)            if (array[i] > P && array[i] < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < 8; i++)            if (array[i] < 0)                value = array[i];                index = i;    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < 10; i++)                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);            else                y[i] = double.NaN;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Караваев.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Натыров.cs
9
    public double[] Task_1_1(double[] array)        double summ = 0;        for (int i = 0; i < array.Length; i++)            summ += array[i];        for (int i = 0; i < array.Length; i++)            array[i] = Math.Round(array[i] / summ, 2);    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double[] Task_1_4(double[] array)        double summ = 0;        for (int i = 0; i < array.Length; i++)            summ = summ + array[i];        double sredn = Math.Round(summ / 5, 2);        for (int i = 0; i < 5; i++)            array[i] = Math.Round(array[i] - sredn, 2);    public double Task_1_5(double[] vector1, double[] vector2)        double product = 0;        for (int i = 0; i < vector1.Length; i++)            product += vector1[i] * vector2[i];        product = Math.Round(product, 2);    public double Task_1_6(double[] vector)        double length = 0;        double summ = 0;        for (int i = 0; i < 5; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);    public double[] Task_1_7(double[] array)        double sredn = 0;        for (int i = 0; i < array.Length; i++)            sredn += array[i];        sredn = sredn / array.Length;        for (int i = 0; i < array.Length; i++)            if (array[i] > sredn)                array[i] = 0;    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                count += 1;    public int Task_1_9(double[] array)        int count = 0;        double sredn = 0;        for (int i = 0; i < array.Length; i++)            sredn += array[i];        sredn = sredn / array.Length;        for (int i = 0; i < array.Length; i++)            if (array[i] > sredn)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;            if (array[i] < 0)                value = array[i];                index = i;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Коротаев.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Сивков.cs
24
    public double[] Task_1_1(double[] array)        double s = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];        for (int i = 0; i < array.Length; i++)            else array[i] = Math.Round(array[i] / s, 2);    public double[] Task_1_2(double[] array)        double s = 0;        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0)                s += array[i];                count++;        double avg = Math.Round(s / count, 2);        for (int i = 0; i < array.Length; i++)            if (array[i] > 0)                array[i] = avg;    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] s = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            s[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double[] Task_1_4(double[] array)        double s = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];        double avg = Math.Round(s / array.Length, 2);        for (int i = 0; i < array.Length; i++)            array[i] = Math.Round(array[i] - avg, 2);    public double[] Task_1_7(double[] array)        double s = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];        double avg = Math.Round(s / array.Length, 2);        for (int i = 0; i < array.Length; i++)            if (array[i] > avg)                array[i] = 0;    public int Task_1_9(double[] array)        int count = 0;        double s = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];        double avg = Math.Round(s / array.Length, 2);        for (int i = 0; i < array.Length; i++)            if (array[i] > avg)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > P && array[i] < Q)                count++;    public double[] Task_1_11(double[] array)        //double[] output = null;        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0)                count++;        double[] output = new double[count];        int index = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0)                output[index++] = array[i];    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;    public (double[], double[]) Task_1_13(double[] array)        double[] even = new double[array.Length / 2];        int evenIndex = 0, oddIndex = 0;        for (int i = 0; i < array.Length; i++)            if (i % 2 == 0)                even[evenIndex++] = array[i];            else                odd[oddIndex++] = array[i];    public double Task_1_14(double[] array)        double s = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                break;            s += Math.Round(array[i] * array[i], 2);    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < x.Length; i++)            if (x[i] > 0)                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);            else                y[i] = double.NaN;    public double Task_2_2(double[] array)        double s = 0;        int index = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[index])                index = i;        for (int i = 0; i < index; i++)            s += array[i];    public double[] Task_2_4(double[] array)        int index = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[index])                index = i;        double s = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];        double avg = Math.Round(s / array.Length, 2);        for (int i = index + 1; i < array.Length; i++)            array[i] = avg;    public double[] Task_2_6(double[] array, double P)        double s = 0;        for (int i = 0; i < array.Length; i++)            s += array[i];        double avg = Math.Round(s / array.Length, 2);        int index = 0;        double diff = Math.Abs(array[0] - avg);        for (int i = 1; i < array.Length; i++)            double difference = Math.Abs(array[i] - avg);            if (difference < diff)                diff = difference;                index = i;        double[] result = new double[array.Length + 1];        for (int i = 0, j = 0; i < result.Length; i++, j++)            if (i == index + 1)                result[i] = P;                j--;            else                result[i] = array[j];    public double[] Task_2_8(double[] array)        int index = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[index])                index = i;        if (index == array.Length - 1)        int minIndex = index + 1;        for (int i = index + 1; i < array.Length; i++)            if (array[i] < array[minIndex])                minIndex = i;        double t = array[index];        array[index] = array[minIndex];        array[minIndex] = t;    public double[] Task_2_10(double[] array)        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0 && (index == -1 || array[i] < array[index]))                index = i;        if (index != -1)            double[] result = new double[array.Length - 1];            for (int i = 0, j = 0; i < array.Length; i++)                if (i != index)                    result[j++] = array[i];    public double[] Task_2_12(double[] array)        int index = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[index])                index = i;        int negIndex = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                negIndex = i;                break;        if (negIndex != -1)            double s = 0;            for (int i = index + 1; i < array.Length; i++)                s += array[i];            array[negIndex] = Math.Round(s, 2);    public double[] Task_2_14(double[] array)        int maxInd = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[maxInd])                maxInd = i;        int negInd = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                negInd = i;                break;        if (negInd != -1)            double temp = array[maxInd];            array[maxInd] = array[negInd];            array[negInd] = temp;    public double[] Task_2_18(double[] array)        double even = double.MinValue;        double odd = double.MinValue;        for (int i = 0; i < array.Length; i++)            if (i % 2 == 0 && array[i] > even)                even = array[i];            else if (i % 2 != 0 && array[i] > odd)                odd = array[i];        int mid = array.Length / 2;        if (even > odd)            for (int i = 0; i < mid; i++)                array[i] = 0;        else            for (int i = mid; i < array.Length; i++)                array[i] = 0;    public double Task_2_20(double[] array)        double s = 0;        int negIndex = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                negIndex = i;                break;        int minIndex = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] < array[minIndex])                minIndex = i;        if (negIndex != -1 && negIndex < minIndex)            for (int i = 0; i < array.Length; i += 2)                s += array[i];        else            for (int i = 1; i < array.Length; i += 2)                s += array[i];    public double[] Task_3_3(double[] array)        int index = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[index])                index = i;        for (int i = 0; i < index - 1; i += 2)            double temp = array[i];            array[i] = array[i + 1];            array[i + 1] = temp;    public int Task_3_6(double[] array)        int length = 0;        int c = 1;        for (int i = 1; i < array.Length; i++)            if (array[i] < array[i - 1])                c++;            else                if (c > length)                    length = c;                c = 1;        if (c > length)            length = c;    public int Task_3_9(double[] array)        int length = 0;        int c = 1;        bool isAscending = false;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[i - 1])                if (!isAscending)                    c = 2;                    isAscending = true;                else                    c++;            else if (array[i] < array[i - 1])                if (isAscending)                    c = 2;                    isAscending = false;                else                    c++;            else                c = 1;            if (c > length)                length = c;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Кулагина.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Куличков.cs
18
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double[] Task_1_4(double[] array)        double sum = 0;            sum += item;        sum /= array.Length;        for (int i = 0; i < array.Length; i++)            array[i] = Math.Round(array[i] - sum, 2);    public double Task_1_5(double[] vector1, double[] vector2)        double product = 0;        for (int i = 0; i < vector1.Length; i++)            product += vector1[i] * vector2[i];        product = Math.Round(product, 2);    public double Task_1_6(double[] vector)        double length = 0;        foreach (double item in vector)            length += item * item;        length = Math.Sqrt(length);    public double[] Task_1_7(double[] array)        double avg = 0;        foreach (double item in array)            avg += item;        avg /= array.Length;        for (int i = 0; i < array.Length; i++)    public int Task_1_9(double[] array)        int count = 0;        double avg = 0;        foreach (double item in array)            avg += item;        avg /= array.Length;        for (int i = 0; i < array.Length; i++)            if (array[i] > avg) count++;    public double[] Task_1_11(double[] array)        double[] output = null;        int count = 0;            if (item > 0) count++;        output = new double[count];        int currentI = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0)                output[currentI] = array[i];                currentI++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = array.Length - 1; i >= 0; i--)            if (array[i] < 0)                value = array[i];                index = i;                break;    public (double[], double[]) Task_1_13(double[] array)        double[] even = new double[array.Length / 2];        for (int i = 0; i < array.Length; i++)            if (i % 2 == 0) even[i / 2] = array[i];            else odd[i / 2] = array[i];    public double Task_1_14(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0) break;            sum += array[i] * array[i];    public double[] Task_2_3(double[] array)        double min = double.MaxValue;        int minIndex = 0;            if (array[i] >= 0) array[i] *= 2;            else array[i] /= 2;    public double[] Task_2_5(double[] array)        double min = double.MaxValue, max = double.MinValue;        int minIndex = 0, maxIndex = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < min)                minIndex = i;            if (array[i] > max)                max = array[i];                maxIndex = i;        int count = 0, firstIndex = Math.Min(maxIndex, minIndex), lastIndex = Math.Max(maxIndex, minIndex);        for (int i = firstIndex + 1; i < lastIndex; i++) if (array[i] < 0) count++;        double[] resultArray = new double[count];        int currentIndex = 0;                resultArray[currentIndex] = array[i];                currentIndex++;    public double Task_2_9(double[] array)        double average = 0;        double min = double.MaxValue, max = double.MinValue;        int minIndex = 0, maxIndex = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < min)                min = array[i];                minIndex = i;            if (array[i] > max)                max = array[i];                maxIndex = i;        int firstIndex = Math.Min(maxIndex, minIndex), lastIndex = Math.Max(maxIndex, minIndex);        for (int i = firstIndex + 1; i < lastIndex; i++) average += array[i];    public double[] Task_2_11(double[] array, double P)        int index = -1;        for (int i = array.Length - 1; i >= 0; i--)            if (array[i] > 0)                index = i;                break;        double[] resultArray = new double[array.Length + 1];        if (index < 0) resultArray = array;        else            for (int i = 0; i <= index; i++)                resultArray[i] = array[i];            resultArray[index + 1] = P;        array = resultArray;    public double[] Task_2_13(double[] array)        double max = double.MinValue;        int maxIndex = 0;            if (array[i] > max)                max = array[i];                maxIndex = i;        array[maxIndex] = maxIndex;    public double[] Task_2_15(double[] A, double[] B, int k)        double[] output = new double[A.Length + B.Length];        for (int i = 0; i <= k; i++) output[i] = A[i];        for (int i = 0; i < B.Length; i++) output[k + i + 1] = B[i];        for (int i = 0; i < A.Length - k - 1; i++) output[k + B.Length + i + 1] = A[k + i + 1];    public double Task_2_17(double[] array)        double average = 0;        double min = double.MaxValue, max = double.MinValue, sumOtr = 0, sumPol = 0;        int minIndex = -1, maxIndex = -1, countOtr = 0, countPol = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < min)                min = array[i];                minIndex = i;            if (array[i] > max)                max = array[i];                maxIndex = i;            if (array[i] > 0)                sumPol += array[i];                countPol++;            else                sumOtr += array[i];                countOtr++;        if (maxIndex < minIndex)            average = countPol == 0 ? 0 : sumPol / countPol;        else            average = countOtr == 0 ? 0 : sumOtr / countOtr;        average = Math.Round(average, 3);    public double[] Task_2_19(double[] array)        double max = double.MinValue, sum = 0;        int maxIndex = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] > max)                max = array[i];                maxIndex = i;            sum += array[i];        if (max > sum)            array[maxIndex] = 0;        else            array[maxIndex] *= 2;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Литвин.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Ролдугин.cs
17
    public double[] Task_1_1(double[] array)        double sum = 0;        for (int i = 0; i < 6; i++)            sum += array[i];        for (int i = 0; i < 6; i++)            array[i] = Math.Round(array[i] / sum, 2);    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double[] Task_1_4(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];        double ar = sum / array.Length;        for (int i = 0; i < array.Length; i++)            array[i] = Math.Round(array[i] - ar, 2);    public double[] Task_1_7(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];        double ar = sum / array.Length;        for (int i = 0; i < array.Length; i++)            if (array[i] > ar)                array[i] = 0;    public int Task_1_9(double[] array)        int count = 0;        double sum = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];        double ar = sum / array.Length;        for (int i = 0; i < array.Length; i++)            if (array[i] > ar) count++;    public double[] Task_1_11(double[] array)        double[] output = null;        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0) count++;        output = new double[count];        int j = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0)                output[j] = array[i];                j++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;    public double Task_1_14(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0) break;            sum += (array[i] * array[i]);    public double Task_2_2(double[] array)        double sum = 0;        double max = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > max)                max = array[i];        for (int i = 0; i < array.Length; i++)            if (array[i] == max) break;            sum += array[i];    public double[] Task_2_4(double[] array)        double max = 0;        int maxi = 0;        double sum = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];        double ar = Math.Round(sum / array.Length, 2);        for (int i = maxi + 1; i < array.Length; i++)            array[i] = ar;    public double[] Task_2_6(double[] array, double P)        double sum = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];        double ar = sum / array.Length;        double res = double.MaxValue;        int j = 0;        for (int i = 0; i < array.Length; i++)            if (Math.Abs(array[i] - ar) < res)                res = Math.Abs(array[i] - ar);                j = i;        double[] second_array = new double[array.Length + 1];        for (int i = 0; i < array.Length; i++)            if (i < j) second_array[i] = array[i];            if (i == j)                second_array[i] = array[i];                second_array[i + 1] = P;            if (i > j)                second_array[i + 1] = array[i];    public double[] Task_2_8(double[] array)        double mini = double.MaxValue;        int miniI = 0, maxI = 0;        double max = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > max)                max = array[i];                maxI = i;                mini = double.MaxValue;                miniI = i;            if (i > maxI && array[i] < mini)                miniI = i;                mini = array[i];            if (i == array.Length - 1)                array[maxI] = mini;    public double[] Task_2_10(double[] array)        double mini = double.MaxValue;        int miniI = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0 && array[i] < mini)                mini = array[i];                miniI = i;        double[] array_second = new double[array.Length - 1];        for (int i = 0; i < array.Length; i++)            if (i < miniI)                array_second[i] = array[i];            if (i > miniI)                array_second[i - 1] = array[i];        if (mini == double.MaxValue)    public double[] Task_2_12(double[] array)        double max = double.MinValue;        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > max)                max = array[i];                sum = 0;            else                sum += array[i];        sum = Math.Round(sum, 2);        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                array[i] = sum;                break;        for (int i = 0; i < array.Length; i++)            Console.WriteLine(array[i]);    public double[] Task_2_14(double[] array)        double max = double.MinValue;        int maxI = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > max)                max = array[i];                maxI = i;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                array[maxI] = array[i];                array[i] = max;                break;        for (int i = 0; i < array.Length; i++)            Console.WriteLine(array[i]);    public int[] Task_2_16(double[] array)        int[] output = null;        double sum = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];        double ar = sum / array.Length;        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < ar) count++;        output = new int[count];        int j = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < ar)                output[j] = i;                j++;    public double[] Task_2_18(double[] array)        double maxchet = 0;        double maxnechet = 0;        for (int i = 0; i < array.Length; i++)            if (i % 2 == 0 && array[i] > maxchet)                maxchet = array[i];                maxnechet = array[i];        if (maxchet > maxnechet)            for (int i = 0; i < array.Length / 2; i++)                array[i] = 0;        else            for (int i = array.Length / 2; i < array.Length; i++)                array[i] = 0;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Лукьяненко.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Черных.cs
18
    public double Task_1_6(double[] vector)        double length = 0;            length += x * x;        length = Math.Sqrt(length);        Console.WriteLine(Math.Round(length, 2));    public int Task_1_8(double[] array)        int count = 0;        foreach (double x in array)            if (x < 0) count++;        Console.WriteLine(count);    public int Task_1_9(double[] array)        int count = 0;        double S = 0, num = 0;        foreach (double x in array)            S += x;            num++;        S /= num;        foreach (double x in array)            if (x > S) count++;        Console.WriteLine(count);    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        foreach (double x in array)            if (x > P && x < Q) count++;        Console.WriteLine(count);    public double[] Task_1_11(double[] array)        double[] output = null;        int count = 0;        foreach (double x in array)            if (x > 0) count++;        output = new double[count];        for (int i = 0, j = 0; i < array.Length; i++)        foreach (double x in output)            Console.Write(x + " ");    public double Task_1_14(double[] array)        double sum = 0;            if (x >= 0) sum += x * x;            else break;        Console.WriteLine(sum);    public double[] Task_2_1(double[] array)        int index = -1;        double min = 999999;        array[index] *= 2;        foreach (double x in array) Console.Write(x + " ");    public double Task_2_2(double[] array)        double sum = 0;        int index = -1;        double max = -999999;        for (int i = 0; i < index; i++) sum += array[i];        Console.WriteLine(sum);    public double[] Task_2_3(double[] array)        int index = -1;        double min = 999999;        for (int i = 0; i < array.Length; i++)            if (array[i] > 0) array[i] *= 2;            else array[i] /= 2;        foreach (double x in array) Console.Write(x + " ");    public double[] Task_2_6(double[] array, double P)        int index = -1;        double min = 999999, sum = 0, count = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];            count++;        sum /= count;        for (int i = 0; i < array.Length; i++)            if (array[i] - sum < min) min = array[i] - sum;    public double[] Task_2_7(double[] array)        double max = -999999;        int index = -1;        if (index + 1 != array.Length)            if (array[index + 1] > 0)                array[index + 1] *= 2;            else                array[index + 1] /= 2;        foreach (double x in array)            Console.Write(x + " ");    public double[] Task_2_10(double[] array)            double[] array2 = new double[array.Length - 1];            double min = 99999; int ind = 0;            int schet = 0;            for (int i = 0; i < array.Length; i++)                if (array[i] > 0)                    if (array[i] < min)                        min = array[i];                        ind = i;            for (int i = 0; i < array.Length; i++)                if (array[i] == min)                    continue;                else                    array2[schet] = array[i];                    schet++;            for (int i = 0; i < array2.Length; i++)                Console.WriteLine(array2[i]);    public double[] Task_2_13(double[] array)        int index = -1;        double max = -999999;        for (int i = 0; i < array.Length; i++)        array[index] = index;        foreach (double x in array)            Console.Write(x + " ");        Console.WriteLine();    public double[] Task_2_15(double[] A, double[] B, int k)        output = new double[A.Length + B.Length];        for (int i = 0; i <= k; i++)            output[i] = A[i];        for (int i = k + 1, j = 0; i < k + B.Length + 1; i++, j++)            output[i] = B[j];        for (int i = B.Length + k + 1, j = k + 1; i < B.Length + A.Length; i++, j++)            output[i] = A[j];        foreach (double x in output)            Console.Write(x + " ");        Console.WriteLine();    public double[] Task_2_19(double[] array)        int indexMax = -1;        double max = -999999, sum = 0;            sum += array[i];        if (array[indexMax] > sum) array[indexMax] = 0;        else array[indexMax] *= 2;        foreach (double x in array)            Console.Write(x + " ");        Console.WriteLine();    public double[] Task_3_3(double[] array)        double max = -999999, swap = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)        for (int i = 0; i < index; i += 2)        foreach (double x in array)            Console.Write(x + " ");        Console.WriteLine();    public int Task_3_6(double[] array)        int count = 0;        int[] countArr = new int[5];        int max = 0;        for (int i = 0, j = 0; i < array.Length - 1; i++)            if (array[i] > array[i + 1])                count++;            else                countArr[j] = count + 1;                count = 0;                j++;        for (int i = 0; i < countArr.Length; i++)            if (countArr[i] > max) max = countArr[i];        count = max;        Console.WriteLine(max);    public double[] Task_3_12(double[] array)        int count = 0;        foreach (double x in array)            if (x < 0) count++;        double[] numbers = new double[array.Length - count];        for (int i = 0, j = 0; i < array.Length; i++)        array = new double[numbers.Length];        array = numbers;        foreach (double x in array)            Console.Write(x + " ");
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Мещеряков.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Чечётин.cs
27
    public double[] Task_1_1(double[] array)        double sum = 0;        for(int i = 0; i < array.Length; i++)            sum += array[i];        for(int j = 0; j < array.Length; j++)            if (sum != 0)            array[j] = Math.Round(array[j] / sum, 2);            else                 array[j] = 0;    public double[] Task_1_2(double[] array)        double avg = 0;        double sum = 0;        double cnt = 0;        for(int i = 0; i < array.Length; i++)            if(array[i] > 0)                sum += array[i];                cnt++;        if(cnt > 0)            avg = sum / cnt;        else            avg = 0;        for(int j = 0; j < array.Length; j++)            if(array[j] > 0)            array[j] = Math.Round(avg, 2);    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for(int i = 0; i < first.Length; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double Task_1_6(double[] vector)        double length = 0;        for(int i = 0; i < vector.Length; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);    public double[] Task_1_7(double[] array)        double sum = 0;        int cnt = 0;        double avg = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];            cnt++;        if (cnt!= 0)            avg = sum / cnt;        for (int i = 0; i < array.Length; i++)            if(array[i] > avg)                array[i] = 0;    public int Task_1_8(double[] array)        int count = 0;        for(int i = 0; i < array.Length; i++)            if(array[i] < 0)                count++;    public int Task_1_9(double[] array)        double sum = 0;        int cnt = 0;        double avg = 0;        for (int i = 0; i < array.Length; i++)            sum += array[i];            cnt++;        if (cnt!= 0)            avg = sum / cnt;        for (int i = 0; i < array.Length; i++)            if(array[i] > avg)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > P && array[i] < Q)                count++;    public double[] Task_1_11(double[] array)        double[] output = null;        int j = 0;        for (int i = 0; i < array.Length; i++)           if(array[i] > 0)           j++;        output = new double[j];        j = 0;        for (int i = 0; i < array.Length; i++)            if(array[i] > 0)                output[j] = array[i];                j++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;    public (double[], double[]) Task_1_13(double[] array)        double[] even = new double[array.Length / 2];        int s = 0;        for (int i = 0; i < array.Length; i++)            if (i % 2 == 0)                even[j] = array[i];                j++;            else                odd[s] = array[i];                s++;    public double Task_1_14(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] >= 0)                sum += Math.Pow(array[i], 2);            else                break;    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < x.Length; i++)            if (x[i] != 0)                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);            else                y[i] = Double.NaN;    public double[] Task_2_1(double[] array)        int j = 0;        double x = array[0];        for(int i = 0; i < array.Length; i++)            if(array[i] < x)                x = array[i];                j = i;    public double Task_2_2(double[] array)        double sum = 0;        double x = array[0];        int s = 0;        for(int i = 0; i < array.Length; i++)            if(array[i] > x)                x = array[i];                s = i;        for(int j = 0; j < s; j++)            sum += array[j];    public double[] Task_2_3(double[] array)        int j = 0;        double x = array[0];        for (int i = 1; i < array.Length; i++)            if (array[i] < x)                x = array[i];                j = i;        for (int s = 0; s < j; s++)            if(array[s] > 0)                array[s] *= 2;            else if(array[s] < 0)                array[s] /=2;    public double[] Task_2_5(double[] array)        double arrMax = array[0];        double arrMin = array[0];        int count = 0;        int indArrMax = 0;        int indArrMin = 0;        int startIndex = 0;        int endIndex = 0;        for(int i = 0; i < array.Length; i++)            if (array[i] > arrMax)                arrMax = array[i];                indArrMax = i;            else if (array[i] < arrMin)                arrMin = array[i];                indArrMin = i;        startIndex = Math.Min(indArrMin, indArrMax);        endIndex = Math.Max(indArrMin, indArrMax);        for(int j = startIndex + 1; j < endIndex; j++)            if (array[j] < 0)                count++;        double[] arr = new double[count];        count = 0;         for(int j = startIndex + 1; j < endIndex; j++)            if (array[j] < 0)                arr[count] = array[j];                count++;    public double[] Task_2_7(double[] array)        int indMax = 0;        double maxElem = array[0];        for (int i = 0; i < array.Length; i++)            if(maxElem < array[i])                maxElem = array[i];                indMax = i;        if (indMax == array.Length - 1)        else if(array[indMax + 1] > 0)            array[indMax + 1] *= 2;        else if(array[indMax + 1] < 0)            array[indMax + 1] /= 2;    public double Task_2_9(double[] array)        double average = 0;        double arrMax = array[0];        double arrMin = array[0];        int indArrMax = 0;        int indArrMin = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > arrMax)                arrMax = array[i];                indArrMax = i;            else if (array[i] < arrMin)                arrMin = array[i];                indArrMin = i;        int startIndex = Math.Min(indArrMin, indArrMax);        int endIndex = Math.Max(indArrMin, indArrMax);        double sum = 0;        int count = 0;        for (int j = startIndex + 1; j < endIndex; j++)            sum += array[j];            count++;        if(count == 0)        average = sum / count;    public double[] Task_2_11(double[] array, double P)        int index = -1;        for(int i = 0; i < array.Length; i++)            if (array[i] > 0)                index = i;        if (index < 0)        double[] array2 = new double[array.Length + 1];        for (int j = 0; j < array.Length + 1; j++)            if (j < index + 1)                array2[j] = array[j];            else if (j == index + 1)                array2[j] = P;            else                array2[j] = array[j - 1];    public double[] Task_2_13(double[] array)        double x = array[0];        for(int i = 0; i < array.Length; i++)            if (array[i] > x && i % 2 == 0)                x = array[i];                indexMax = i;        array[indexMax] = indexMax;    public double[] Task_2_15(double[] A, double[] B, int k)        k = k + 1;        if (k < 0) k = 0;         double[] output = new double[A.Length + B.Length];        for (int i = 0; i < k && i < A.Length; i++)            output[i] = A[i];        for (int i = 0; i < B.Length; i++)            output[i + k] = B[i];        for (int i = k; i < A.Length; i++)             output[i + B.Length] = A[i];      public double Task_2_17(double[] array)        double average = 0;        double sum = 0;        int count = 0;        double maxElements = array[0];        double minElements = array[0];        int indArrMax = 0;        int indArrMin = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > maxElements)                maxElements = array[i];                indArrMax = i;            if (array[i] < minElements)                minElements = array[i];                indArrMin = i;        if(indArrMin < indArrMax)            for(int j = 0; j < array.Length; j++)                if(array[j] < 0)                    sum += array[j];                    count++;        else if (indArrMax < indArrMin)            for(int s = 0; s < array.Length; s++)                if(array[s] > 0)                    sum += array[s];                    count++;        if (count == 0)        average = sum / count;    public double[] Task_2_19(double[] array)        double sum = 0;        int indexMaxElements = 0;        double maxElements = array[0];        for(int i = 0; i < array.Length; i++)            sum += array[i];            if (array[i] > maxElements)                maxElements = array[i];                indexMaxElements = i;        if(maxElements > sum)            array[indexMaxElements] = 0;        else if(maxElements < sum)            if(maxElements > 0)                array[indexMaxElements] *= 2;            else if(maxElements < 0)                array[indexMaxElements] /= 2;    public double[] Task_3_3(double[] array)        int maxIndex = 0;        for (int i = 1; i < array.Length; i++)            if (array[i] > array[maxIndex])                maxIndex = i;        for (int i = 0; i < maxIndex - 1; i += 2)            double temp = array[i];            array[i] = array[i + 1];            array[i + 1] = temp;    public int Task_3_6(double[] array)        int count = 0;        int currentLength = 1;         for (int i = 1; i < array.Length; i++)            if (array[i] < array[i - 1])                 currentLength++;                 count = Math.Max(count, currentLength);             else                currentLength = 1;     public double[] Task_3_12(double[] array)        int count = 0;        double[] normalizedArray = new double[array.Length];        for(int i = 0; i < array.Length; i++)            normalizedArray[i] = array[i];        for(int i = 0; i < normalizedArray.Length; i++)            if(array[i] >= 0)                count++;        array = new double[count];        count = 0;        for(int i = 0; i < normalizedArray.Length; i++)            if(normalizedArray[i] >= 0)                array[count] = normalizedArray[i];                count++;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Мохаммад.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Чекалина.cs
5
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double Task_1_6(double[] vector)        double length = 0;        for (int i = 0; i < vector.Length; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > P && array[i] < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\МушкинаВиктория.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Стрельцов.cs
5
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < 4; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double Task_1_5(double[] vector1, double[] vector2)        double product = 0;        for (int i = 0; i < 4; i++)            product += vector1[i] * vector2[i];        product = Math.Round(product, 2);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < 6; i++)            if (array[i] < 0)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < 10; i++)            if (array[i] > P && array[i] < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < 8; i++)            if (array[i] < 0)                value = array[i];                index = i;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Натыров.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Саченко.cs
5
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double Task_1_5(double[] vector1, double[] vector2)        double product = 0;        for (int i = 0; i < vector1.Length; i++)            product += vector1[i] * vector2[i];        product = Math.Round(product, 2);    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        foreach (double i in array)            if (i > P && i < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        for (int i = 0; i < x.Length; i++)                y[i] = double.NaN;            else                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Полякова.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Соков.cs
30
    public double[] Task_1_1(double[] array)        double sum = 0;        int lengthArray = array.Length;        for (int i = 0; i < lengthArray; i++)            sum += array[i];        for (int j = 0; j < lengthArray; j++)            if (sum != 0)                array[j] = Math.Round(array[j] / sum, 2);            else                array[j] = 0;    public double[] Task_1_2(double[] array)        int lengthArray = array.Length;        double sumPos = 0;        int cntPos = 0;        for (int i = 0; i < lengthArray; i++)            if (array[i] > 0)                cntPos++;                sumPos += array[i];        for (int j = 0; j < lengthArray; j++)            if (array[j] > 0)                array[j] = Math.Round(sumPos / cntPos, 2);    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        int lengthArray = first.Length;        for (int i = 0; i < lengthArray; i++)            sum[i] = Math.Round(first[i] + second[i], 2);            dif[i] = Math.Round(first[i] - second[i], 2);    public double[] Task_1_4(double[] array)        double sumArray = 0;        int lengthArray = array.Length;        for (int i = 0; i < lengthArray; i++)            sumArray += array[i];        for (int j = 0; j < lengthArray; j++)            array[j] = Math.Round(array[j] - sumArray / lengthArray, 2);    public double Task_1_5(double[] vector1, double[] vector2)        double product = 0;        int lengthArray = vector1.Length;        double p = 1, sum = 0;        for (int i = 0; i < lengthArray; i++)            sum += vector1[i] * vector2[i];        product = Math.Round(sum, 2);    public double Task_1_6(double[] vector)        double length = 0;        int lengthArray = vector.Length;        for (int i = 0; i < lengthArray; i++)            length += vector[i] * vector[i];    public double[] Task_1_7(double[] array)        int lengthArray = array.Length;        double Avg = 0, sumArray = 0;        for (int i = 0; i < lengthArray; i++)            sumArray += array[i];        Avg = sumArray / lengthArray;        for (int j = 0; j < lengthArray; j++)            if (array[j] > Avg)                array[j] = 0;    public int Task_1_8(double[] array)        int count = 0;        int lengthArray = array.Length, cntNegativeNum = 0;        for (int i = 0; i < lengthArray; i++)            if (array[i] < 0)                cntNegativeNum++;        count = cntNegativeNum;    public int Task_1_9(double[] array)        int count = 0;        int lengthArray = array.Length;        double avg = 0, sumArr = 0;        for (int i = 0; i < lengthArray; i++)            sumArr += array[i];        avg = sumArr / lengthArray;        for (int j = 0; j < lengthArray; j++)            if (array[j] > avg)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        int lengthArr = array.Length;        if (P < 0 && Q > lengthArr)        for (int i = P; i < lengthArr; i++)            if (array[i] > P && array[i] < Q)                count++;    public double[] Task_1_11(double[] array)        double[] output = null;        int lengthArr = array.Length;        int cntPos = 0;        for (int i = 0; i < lengthArr; i++)            if (array[i] > 0)                cntPos++;        int lengthNewArr = cntPos;        output = new double[lengthNewArr];        int indexNewArr = 0;        for (int j = 0; j < lengthArr; j++)            if (array[j] > 0)                output[indexNewArr] = array[j];                indexNewArr++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        int lengthArr = array.Length;        for (int i = 0; i < lengthArr; i++)            if (array[i] < 0)                index = i;                value = array[i];    public (double[], double[]) Task_1_13(double[] array)        double[] even = new double[array.Length / 2];        int indEven = 0, indOdd = 0;        for (int i = 0; i < array.Length; i++)            if (i % 2 == 0)                even[indEven] = array[i];                indEven++;            else                odd[indOdd] = array[i];                indOdd++;    public double Task_1_14(double[] array)        double sum = 0;        int lengthArr = array.Length;        for (int i = 0; i < lengthArr; i++)            if (array[i] < 0)                break;            else                sum += array[i] * array[i];    public double[] Task_1_15(double[] x)        double[] y = new double[x.Length];        int lengthArr = x.Length;        for (int i = 0; i < lengthArr; i++)            if (x[i] == 0)                y[i] = Double.NaN;            else                y[i] = Math.Round(0.5 * Math.Log(x[i]), 2);    public double Task_2_2(double[] array)        double sum = 0;        int lengthArr = array.Length, indMax = 0;        double valueMax = double.MinValue;        for (int i = 0; i < lengthArr; i++)            if (array[i] > valueMax)                valueMax = array[i];                indMax = i;        for (int j = 0; j < indMax; j++)            sum += array[j];    public double[] Task_2_3(double[] array)        int lengthArr = array.Length, indMin = 0;        double valueMin = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] < valueMin)                valueMin = array[i];                indMin = i;        for (int j = 0; j < indMin; j++)            if (array[j] > 0)                array[j] = Math.Round(array[j] * 2, 2);                array[j] = Math.Round(array[j] / 2, 2);    public double[] Task_2_4(double[] array)        int lengthArr = array.Length, indMax = 0;        double valueMax = array[0], sum = 0, avg = 0;        for (int i = 0; i < lengthArr; i++)            sum += array[i];            if (array[i] > valueMax)                valueMax = array[i];                indMax = i;        avg = Math.Round(sum / lengthArr, 2);        for (int j = indMax + 1; j < lengthArr; j++)            array[j] = avg;    public double[] Task_2_5(double[] array)        int lengthArr = array.Length;        int indMax = 0, indMin = 0;        double valMax = array[0], valMin = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] > valMax)                indMax = i;                valMax = array[i];            if (array[i] < valMin)                indMin = i;                valMin = array[i];        int cnt = 0;            if (array[k] < 0)                cnt++;        int indNew = 0;        for (int j = Math.Min(indMax, indMin) + 1; j < Math.Max(indMax, indMin); j++)            if (array[j] < 0)                newArr[indNew] = array[j];                indNew++;    public double[] Task_2_7(double[] array)        int lengthArr = array.Length;        int indMax = 0;        double valMax = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] > valMax)                indMax = i;                valMax = array[i];        if (indMax == lengthArr - 1)        else if (array[indMax + 1] > 0)            array[indMax + 1] = array[indMax + 1] * 2;            array[indMax + 1] = array[indMax + 1] / 2;    public double Task_2_9(double[] array)        double average = 0;        int lengthArr = array.Length;        int indMax = 0, indMin = 0;        double valMax = array[0], valMin = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] > valMax)                indMax = i;                valMax = array[i];            if (array[i] < valMin)                indMin = i;                valMin = array[i];        double sum = 0;        int cnt = 0;        for (int j = Math.Min(indMax, indMin) + 1; j < Math.Max(indMax, indMin); j++)            sum += array[j];            cnt++;        if (cnt == 0)    public double[] Task_2_11(double[] array, double P)        int indPos = -1;        int lengthArr = array.Length;        for (int i = 0; i < lengthArr; i++)            if (array[i] > 0)                indPos = i;        if (indPos == -1)        for (int j = 0; j < lengthArr + 1; j++)            if (j < indPos + 1)                newArr[j] = array[j];            else if (indPos + 1 == j)                newArr[j] = P;            else                newArr[j] = array[j - 1];    public double[] Task_2_13(double[] array)        int lengthArr = array.Length;        int indMax = 0;        double valMax = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] > valMax && i % 2 == 0)                indMax = i;                valMax = array[i];        array[indMax] = indMax;    public double[] Task_2_15(double[] A, double[] B, int k)        double[] output = null;        int lengthArrA = A.Length, lengthArrB = B.Length;        if (k < 0)            k = 0;        k++;        for (int i = 0; i < A.Length; i++)            if (i < k)                output[i] = A[i];            else if (i == k)                for (int j = 0; j < lengthArrB; j++)                    output[k + j] = B[j];            output[i + lengthArrB] = A[i];    public double Task_2_17(double[] array)        double average = 0;        int lengthArr = array.Length;        int indMax = 0, indMin = 0;        double valMax = array[0], valMin = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] > valMax)                indMax = i;                valMax = array[i];            if (array[i] < valMin)                indMin = i;                valMin = array[i];        if (indMax < indMin)            double sumPos = 0;            int cntPos = 0;            for (int j = 0; j < lengthArr; j++)                if (array[j] > 0)                    cntPos++;                    sumPos += array[j];            if (cntPos == 0)        else            double sumDif = 0;            int cntDif = 0;            for (int k = 0; k < lengthArr; k++)                if (array[k] < 0)                    cntDif++;                    sumDif += array[k];            if (cntDif == 0)    public double[] Task_2_19(double[] array)        int lengthArr = array.Length, indMax = 0;        double sum = 0, valMax = array[0];        for (int i = 0; i < lengthArr; i++)            sum += array[i];            if (array[i] > valMax)                indMax = i;                valMax = array[i];        if (valMax > sum)            array[indMax] = 0;        else            array[indMax] = valMax * 2;    public double[] Task_3_2(double[] array)        int lengthArr = array.Length;        double valMax = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] > valMax)                valMax = array[i];        int cntMax = 1;        for (int j = 0; j < lengthArr; j++)            if (array[j] == valMax)                array[j] = valMax + cntMax;                cntMax++;    public double[] Task_3_5(double[] array)        int lengthArr = array.Length;        double[] arrayB = null;        if (lengthArr % 2 == 0)            arrayB = new double[lengthArr / 2];        else            arrayB = new double[lengthArr / 2 + 1];        int indB = 0;        for (int i = 0; i < lengthArr; i++)            if (i % 2 == 0)                arrayB[indB] = array[i];                indB++;        for (int k = 1; k < arrayB.Length; k++)            double key = arrayB[k];            int j = k - 1;                arrayB[j + 1] = arrayB[j];                j--;            arrayB[j + 1] = key;        indB = 0;        for (int j = 0; j < lengthArr; j++)            if (j % 2 == 0)                array[j] = arrayB[indB];                indB++;    public double[] Task_3_8(double[] array)        int lengthArr = array.Length;        int cntDif = 0;        for (int i = 0; i < lengthArr; i++)            if (array[i] < 0)                cntDif++;        int indB = 0;        for (int p = 0; p < lengthArr; p++)            if (array[p] < 0)                arrayB[indB] = array[p];                indB++;        for (int k = 1; k < arrayB.Length; k++)            double key = arrayB[k];            int j = k - 1;                arrayB[j + 1] = arrayB[j];                j--;            arrayB[j + 1] = key;        indB = 0;        for (int y = 0; y < lengthArr; y++)            if (array[y] < 0)                array[y] = arrayB[indB];                indB++;    public double[] Task_3_14(double[] array)        double[] normalizedArray = null;        int lengthArr = array.Length;        double maxVal = array[0], minVal = array[0];        for (int i = 0; i < lengthArr; i++)            if (array[i] < minVal)                minVal = array[i];            if (array[i] > maxVal)                maxVal = array[i];        for (int j = 0; j < lengthArr; j++)            normalizedArray[j] = Math.Round(2 * (array[j] - minVal) / (maxVal - minVal) - 1, 2);
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Потрикеев.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Усков.cs
5
    public double[] Task_1_1(double[] array)        int length = array.Length;        double summ = 0;        for (int i = 0; i < length; i++)            summ += array[i];        for (int i = 0; i < length; i++)            array[i] /= summ;            array[i] = Math.Round(array[i], 2);    public double[] Task_1_2(double[] array)        int length = array.Length;        double summ = 0;        int count = 0;        for (int i = 0; i < length; i++)            if (array[i] > 0)                count++;                summ += array[i];        double avarage = Math.Round(summ / count, 2);        for (int i = 0; i < length; i++)            if (array[i] > 0)                array[i] = avarage;    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < first.Length; i++)            dif[i] = first[i] - second[i];            sum[i] = Math.Round(sum[i], 2);            dif[i] = Math.Round(dif[i], 2);    public double[] Task_1_4(double[] array)        double avarage = array.Sum() / array.Length;        for (int i = 0; i < array.Length; i++)            array[i] -= avarage;            array[i] = Math.Round(array[i], 2);    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Степанов.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Степанян.cs
5
    public (double[], double[]) Task_1_3(double[] first, double[] second)        double[] sum = new double[first.Length], dif = new double[first.Length];        for (int i = 0; i < 4; i++)            sum[i] = first[i] + second[i];            dif[i] = first[i] - second[i];    public double[] Task_1_7(double[] array)        double sum = 0;        for (int i = 0; i < 7; i++)            sum += array[i];        sum = sum / 7;        for (int i = 0; i < 7; i++)            if (array[i] > sum)                array[i] = 0;    public int Task_1_9(double[] array)        int count = 0;        double sum = 0;        for (int i = 0; i < 8; i++)            sum += array[i];        sum = sum / 7;        for (int i = 0; i < 8; i++)            if (array[i] > sum)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;            if (array[i] < 0)                value = array[i];                index = i;    public (double[], double[]) Task_1_13(double[] array)        double[] even = new double[array.Length / 2];        for (int i = 0; i < 10; i = i + 2)            even[i / 2] = array[i];            odd[i / 2] = array[i + 1];
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Чекалина.cs
C:\Users\Markosias\Source\Repos\BIVT24_Antiplagiat\WorksForPlagiat\Lab3\Чистякова.cs
5
    public double Task_1_6(double[] vector)        double length = 0;        for (int i = 0; i < vector.Length; i++)            length += vector[i] * vector[i];        length = Math.Sqrt(length);    public int Task_1_8(double[] array)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                count++;    public int Task_1_10(double[] array, int P, int Q)        int count = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] > P && array[i] < Q)                count++;    public (double, int) Task_1_12(double[] array)        double value = 0;        int index = -1;        for (int i = 0; i < array.Length; i++)            if (array[i] < 0)                value = array[i];                index = i;    public double Task_1_14(double[] array)        double sum = 0;        for (int i = 0; i < array.Length; i++)            if (array[i] >= 0)            else                break;
